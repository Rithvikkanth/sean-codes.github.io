<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-02-26T01:35:30-06:00</updated><id>http://localhost:4000//</id><title type="html">Sean Codes</title><subtitle>Hi! I'm a software developer in Chicago specializing in Web Development, Network programming, and 2D Game development.
</subtitle><entry><title type="html">Toggle login and register form single page app animation, using only CSS</title><link href="http://localhost:4000/2017/02/23/no-javascript-login-register-toggle-form-animation" rel="alternate" type="text/html" title="Toggle login and register form single page app animation, using only CSS" /><published>2017-02-23T00:00:00-06:00</published><updated>2017-02-23T00:00:00-06:00</updated><id>http://localhost:4000/2017/02/23/no-javascript-login-register-toggle-form-animation</id><content type="html" xml:base="http://localhost:4000/2017/02/23/no-javascript-login-register-toggle-form-animation">&lt;p&gt;This is a codepen of switching a login and register form with a animation where the first slides out maintaining the front position then forces a lower z-index to slide behind. Just vanilla CSS. These are my notes on the project:&lt;/p&gt;

&lt;h2 id=&quot;the-basics&quot;&gt;The basics&lt;/h2&gt;
&lt;p&gt;To do this switch Iâ€™m using two divs and two radios. To start I set the divs with a min-height and max-width and &lt;code class=&quot;highlighter-rouge&quot;&gt;margin:auto&lt;/code&gt;. I create two animations for &lt;code class=&quot;highlighter-rouge&quot;&gt;slideIn&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;slideOut&lt;/code&gt;. 
When I have an input checked I use the slidein animation and use the slideout animation on the non checked.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;input.login + div,
input.register + div{
  transform:translateX(0px);
  animation: 1s slideout;
  z-index: 1;
}

input.login:checked + div,
input.register:checked + div{
  transform:translateX(0px);
  animation: 1s slidein;
  z-index:0;
}

 @keyframes moveout{
   0%, 100%{ transform:translateX(0px); }
   50%{ transform:translateX(-160px); }
}

@keyframes movein{
   0%, 100%{transform:translateX(0px); }
   50%{ transform:translateX(160px); }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;the-interesting-trick&quot;&gt;The interesting trick&lt;/h2&gt;
&lt;p&gt;When I was makign this I could not find any information on swapping z-index in the animation and holding it without causing a flash when the z-index switched at first. To fix this I used an &lt;code class=&quot;highlighter-rouge&quot;&gt;animation-delay&lt;/code&gt; and set the z-index after the animation was halfway through!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/* Inside the slide in add these */
input.login:checked + div,
input.register:checked + div{
  animation: 1s slidein, 2s forceTop infinite;
  animation-delay: 0s, 0.5s;
}

@keyframes forceTop{
  from, to{z-index:2; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;the-extras&quot;&gt;The extras&lt;/h2&gt;
&lt;p&gt;I also added labels and opacity/background changing! I think if you are able to master the top section of this and get the slides functioning you should be able to add those features. The basics for those features revolve around the &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; selector. I sometimes select through multiple elements using it like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;input.login:checked + label + .form{
  /* Do something to the form inside this div! */
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Please take a deeper look at the codepen and let me know if you need any help!&lt;/p&gt;

&lt;p data-height=&quot;600&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;PpoOzr&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;sean_codes&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Front End Day - 35 - No JS Login Register toggle&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/sean_codes/pen/PpoOzr/&quot;&gt;Front End Day - 35 - No JS Login Register toggle&lt;/a&gt; by Sean Codes (&lt;a href=&quot;http://codepen.io/sean_codes&quot;&gt;@sean_codes&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;</content><category term="codepen" /><category term="material" /><category term="css" /><category term="coding" /><category term="nojs" /><category term="login" /><category term="form" /><summary type="html">This is a codepen of switching a login and register form with a animation where the first slides out maintaining the front position then forces a lower z-index to slide behind. Just vanilla CSS. These are my notes on the project:</summary></entry><entry><title type="html">Toggle switches, radio buttons, and checkbox styles, using only CSS</title><link href="http://localhost:4000/2017/02/21/pure-css-checkboxes-toggle-switch-radio" rel="alternate" type="text/html" title="Toggle switches, radio buttons, and checkbox styles, using only CSS" /><published>2017-02-21T00:00:00-06:00</published><updated>2017-02-21T00:00:00-06:00</updated><id>http://localhost:4000/2017/02/21/pure-css-checkboxes-toggle-switch-radio</id><content type="html" xml:base="http://localhost:4000/2017/02/21/pure-css-checkboxes-toggle-switch-radio">&lt;p&gt;This is a codepen of interesting radio, checkbox, and toggle switches! I just wanted to share with you my notes of making this project&lt;/p&gt;

&lt;h2 id=&quot;the-toggle-switch&quot;&gt;The toggle switch&lt;/h2&gt;

&lt;p&gt;To do the toggle switch I used a &lt;code class=&quot;highlighter-rouge&quot;&gt;:after&lt;/code&gt; and the &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; selector! I wrapped the checkbox and label inside a div and created a separate label for displaying the text and the inner is going to draw the display. Hide the input and then use the label to draw the lane and the &lt;code class=&quot;highlighter-rouge&quot;&gt;after&lt;/code&gt; to draw the toggle switch. When the checkbox is checked move the toggle switch using &lt;code class=&quot;highlighter-rouge&quot;&gt;transform: translateX(45px)&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;div.fancyToggle
    label(for=&quot;toggle2&quot;) Toggle
    div.toggle
       input(type=&quot;checkbox&quot; id=&quot;toggle2&quot;)
       label(for=&quot;toggle2&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;the-radio-switch&quot;&gt;The radio switch&lt;/h2&gt;

&lt;p&gt;This one took a bit more trickery and most of it is just guessing numbers to get everything to fit correctly. This requires a wrapper div, and two of each label and input. Hide the radios. Use the wrapper to draw the lane. Then draw each label inside the lane on their sides one with the same color as the lane and the other a primary color when checked. I used &lt;code class=&quot;highlighter-rouge&quot;&gt;transform:scale()&lt;/code&gt; to make the effect!&lt;/p&gt;

&lt;h2 id=&quot;checkboxes&quot;&gt;Checkboxes&lt;/h2&gt;

&lt;p&gt;The checkbox did not require a wrapper but I used for positioning. First hide the checkbox. Then draw the label as the square. Then when checked use the &lt;code class=&quot;highlighter-rouge&quot;&gt;:after&lt;/code&gt; selector and draw a inner square with a primary color!&lt;/p&gt;

&lt;p&gt;Please take a deeper look at the codepen and let me know if you need any help!&lt;/p&gt;

&lt;p data-height=&quot;400&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;ygmNJO&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;sean_codes&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Front End Day 33 - Fancy Checkbox and Toggle Switches&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/sean_codes/pen/ygmNJO/&quot;&gt;Front End Day 33 - Fancy Checkbox and Toggle Switches&lt;/a&gt; by Sean Codes (&lt;a href=&quot;http://codepen.io/sean_codes&quot;&gt;@sean_codes&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;</content><category term="codepen" /><category term="material" /><category term="css" /><category term="coding" /><category term="nojs" /><summary type="html">This is a codepen of interesting radio, checkbox, and toggle switches! I just wanted to share with you my notes of making this project</summary></entry><entry><title type="html">Fancy Loading Bar with scale, rotate, and translate</title><link href="http://localhost:4000/2017/02/19/fancy-circular-loading-bar" rel="alternate" type="text/html" title="Fancy Loading Bar with scale, rotate, and translate" /><published>2017-02-19T00:00:00-06:00</published><updated>2017-02-19T00:00:00-06:00</updated><id>http://localhost:4000/2017/02/19/fancy-circular-loading-bar</id><content type="html" xml:base="http://localhost:4000/2017/02/19/fancy-circular-loading-bar">&lt;p&gt;This is a codepen of a fancy circular loading bar. Where dots are displayed in a cricle and grow! Also with a line underneith. These are some notes I took while making the project!&lt;/p&gt;

&lt;h2 id=&quot;the-html-pug&quot;&gt;The HTML (Pug)&lt;/h2&gt;
&lt;p&gt;The mark up is a bit simple. We need 10 elements within a parent. With a chicle element within the 10 elements. This is because we want to simply use scale for smooth animations and also will be using translate and scale will also scale translates!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.container
   .bubbles
      - for (var i = 0; i &amp;lt; 10; ++i)
         .bubble
            .circle
   .bar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;how-to-position-in-a-circle&quot;&gt;How to position in a circle&lt;/h2&gt;
&lt;p&gt;To position the elements I used SCSS to look over 10 times and rotating then translating on the Y axis!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@for $i from 0 to 15 {
   .bubble:nth-child(#{$i}){
      flex:1;
      position:absolute;
      display:inline-block;
      margin:auto;
      transform: rotateZ($i * 36deg) translateY(50px);
   }
   
   /* Read below */
   .bubble:nth-child(#{$i}) .circle{
      animation-delay: $i * 0.1s; 
   }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;the-animation&quot;&gt;The animation&lt;/h2&gt;
&lt;p&gt;To do the animation I used &lt;code class=&quot;highlighter-rouge&quot;&gt;transform:scale(x)&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;animation-delay&lt;/code&gt; I put the delay inside the same loop above! Iâ€™m only animating on the child of the bubble the &lt;code class=&quot;highlighter-rouge&quot;&gt;.circle&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@keyframes pulse{
   0%{ transform: scale(0.2); }
   50%{ transform: scale(1); opacity:0.75; }
   100%{ transform: scale(0.2); }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here is the codepen please take a look let me know if you have any questions or need any help!&lt;/p&gt;

&lt;p data-height=&quot;400&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;RKzNWj&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;sean_codes&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Front End Day 31 - Loading Bar with bubbles&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/sean_codes/pen/RKzNWj/&quot;&gt;Front End Day 31 - Loading Bar with bubbles&lt;/a&gt; by Sean Codes (&lt;a href=&quot;http://codepen.io/sean_codes&quot;&gt;@sean_codes&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;</content><category term="codepen" /><category term="material" /><category term="css" /><category term="coding" /><category term="nojs" /><summary type="html">This is a codepen of a fancy circular loading bar. Where dots are displayed in a cricle and grow! Also with a line underneith. These are some notes I took while making the project!</summary></entry><entry><title type="html">Pure CSS Material Design FAB Button Burst Modal</title><link href="http://localhost:4000/2017/02/18/material-fab-burst-modal-button-with-content" rel="alternate" type="text/html" title="Pure CSS Material Design FAB Button Burst Modal" /><published>2017-02-18T00:00:00-06:00</published><updated>2017-02-18T00:00:00-06:00</updated><id>http://localhost:4000/2017/02/18/material-fab-burst-modal-button-with-content</id><content type="html" xml:base="http://localhost:4000/2017/02/18/material-fab-burst-modal-button-with-content">&lt;p&gt;This is a codepen of a material design FAB burst button. When you click the button it will burst and show the content. These are some notes I took while making this micro app.&lt;/p&gt;

&lt;h2 id=&quot;positioning-the-button&quot;&gt;Positioning the button&lt;/h2&gt;
&lt;p&gt;To position the button Iâ€™m using &lt;code class=&quot;highlighter-rouge&quot;&gt;position:relative&lt;/code&gt; on the container and &lt;code class=&quot;highlighter-rouge&quot;&gt;position:absolute&lt;/code&gt; on the button. Then just a &lt;code class=&quot;highlighter-rouge&quot;&gt;buttom:y&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;right:x&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-html-for-the-burst-button&quot;&gt;The HTML for the burst button&lt;/h2&gt;
&lt;p&gt;To do this button required a rediculous amount of html. Almost to the point that this would probably never be used in a production enviroment!
I broke the button innt into many parts and the entire button could be wrapped in a container of its own to keep it abstracted from the main page content that way it overlays but to keep it simple I wanted to focus on the main idea :)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;div.container
    input.btn(type=&quot;checkbox&quot;)
    div.btn
        div.circle
            div.ring
            div.outer
            div.inner +
    div.content
        h1 Real content
        p The content
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;scaling-from-the-center&quot;&gt;Scaling from the center&lt;/h2&gt;
&lt;p&gt;Initially I was using width and height and animating on those while translating the X to keep it centered. I found that using &lt;code class=&quot;highlighter-rouge&quot;&gt;transform:scale(amount)&lt;/code&gt; works better but will bug out when scaling to fast it wonâ€™t render sharp if scaling to fast.&lt;/p&gt;

&lt;h2 id=&quot;the-burst-effect&quot;&gt;The burst effect&lt;/h2&gt;
&lt;p&gt;Itâ€™s actually not a crazy difficult effect!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;First transition the ring by using &lt;code class=&quot;highlighter-rouge&quot;&gt;transform: scale(6)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Then delay the outer and &lt;code class=&quot;highlighter-rouge&quot;&gt;transform: scale(30)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;After another delay on the content I use &lt;code class=&quot;highlighter-rouge&quot;&gt;opacity:1&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;show-me-the-code&quot;&gt;Show me the code&lt;/h2&gt;
&lt;p&gt;Here is the codepen please take a look let me know if you have any questions or need any help!&lt;/p&gt;

&lt;p data-height=&quot;550&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;PWgMod&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;sean_codes&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Front End Day 29 - NO JAVASCRIPT Material FAB Burst Popup with content&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/sean_codes/pen/PWgMod/&quot;&gt;Front End Day 29 - NO JAVASCRIPT Material FAB Burst Popup with content&lt;/a&gt; by Sean Codes (&lt;a href=&quot;http://codepen.io/sean_codes&quot;&gt;@sean_codes&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;</content><category term="codepen" /><category term="material" /><category term="css" /><category term="coding" /><category term="nojs" /><summary type="html">This is a codepen of a material design FAB burst button. When you click the button it will burst and show the content. These are some notes I took while making this micro app.</summary></entry><entry><title type="html">Bootstrap Style Mobile Nav without JavaScript or Static Height</title><link href="http://localhost:4000/2017/02/17/bootstrap-mobile-nav-without-javascript-or-set-height" rel="alternate" type="text/html" title="Bootstrap Style Mobile Nav without JavaScript or Static Height" /><published>2017-02-17T00:00:00-06:00</published><updated>2017-02-17T00:00:00-06:00</updated><id>http://localhost:4000/2017/02/17/bootstrap-mobile-nav-without-javascript-or-set-height</id><content type="html" xml:base="http://localhost:4000/2017/02/17/bootstrap-mobile-nav-without-javascript-or-set-height">&lt;p&gt;Hi! This is a basic template for a responsive navigation for desktop/tabel and mobile phone. The mobile phone will go full width and drop down the way bootstrap does. The desktop version displays the buttons at the top with the primary button floated to the right. These are some notes from the project:&lt;/p&gt;

&lt;h2 id=&quot;top-nav-floating-primary-without-clearfix&quot;&gt;Top nav floating primary without clearfix&lt;/h2&gt;
&lt;p&gt;Since the non floated buttons where switched to &lt;code class=&quot;highlighter-rouge&quot;&gt;display:inline-block&lt;/code&gt; we donâ€™t need to use a clearfix. If you want the buttons spaced to match the outer padding I would &lt;code class=&quot;highlighter-rouge&quot;&gt;float:right&lt;/code&gt; on the nav list elements. Then use a simple clear fix (IE 8+):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.clearfix:after{
    display:table;
    content: &quot; &quot;;
    clear:both;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;hiding-the-mobile-nav-with-dynamic-height&quot;&gt;Hiding the mobile nav with dynamic height&lt;/h2&gt;
&lt;p&gt;To do this I set the container as &lt;code class=&quot;highlighter-rouge&quot;&gt;overflow:hidden&lt;/code&gt; and then on hiding the nav I use &lt;code class=&quot;highlighter-rouge&quot;&gt;transform:translateY(100%)&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/*
    Instead of using checkbox you could toggle a class with javascript.
    Some people don't like the checkbox for toggling but I think it's much more elegant
*/
nav input:checked + ul{
 transform:translateY(-100%);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;mobile-first-nav&quot;&gt;Mobile first nav&lt;/h2&gt;
&lt;p&gt;I designed this by doing the mobile parts first then I added the styles to turn the list elements into &lt;code class=&quot;highlighter-rouge&quot;&gt;inline-block&lt;/code&gt; and remove the transform.&lt;/p&gt;

&lt;h2 id=&quot;the-effect-is-most-likely-only-mobile-for-you&quot;&gt;The effect is most likely only mobile for you!&lt;/h2&gt;
&lt;p&gt;If your on a phone this is only going to display mobile you might be able to go landscape mode to see desktop version.&lt;/p&gt;

&lt;p data-height=&quot;600&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;XpQOwG&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;sean_codes&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Front End - Bootstrap Style Mobile Nav without JavaScript or Static Height&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/sean_codes/pen/XpQOwG/&quot;&gt;Front End - Bootstrap Style Mobile Nav without JavaScript or Static Height&lt;/a&gt; by Sean Codes (&lt;a href=&quot;http://codepen.io/sean_codes&quot;&gt;@sean_codes&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Please let me know if you have any questions I can help you understand better!&lt;/p&gt;</content><category term="codepen" /><category term="material" /><category term="flexbox" /><category term="jquery" /><category term="frontend" /><category term="animation" /><category term="data" /><summary type="html">Hi! This is a basic template for a responsive navigation for desktop/tabel and mobile phone. The mobile phone will go full width and drop down the way bootstrap does. The desktop version displays the buttons at the top with the primary button floated to the right. These are some notes from the project:</summary></entry><entry><title type="html">Creating a tool for handling backend cron jobs</title><link href="http://localhost:4000/2017/02/16/front-end-micro-app-with-no-frameworks" rel="alternate" type="text/html" title="Creating a tool for handling backend cron jobs" /><published>2017-02-16T00:00:00-06:00</published><updated>2017-02-16T00:00:00-06:00</updated><id>http://localhost:4000/2017/02/16/front-end-micro-app-with-no-frameworks</id><content type="html" xml:base="http://localhost:4000/2017/02/16/front-end-micro-app-with-no-frameworks">&lt;p&gt;This is a javascript heavy front end template I created for creating, deleting, and updating backend cron jobs. This uses no frameworks or plugins. Here are some notes:&lt;/p&gt;

&lt;h2 id=&quot;data-storage&quot;&gt;Data storage&lt;/h2&gt;
&lt;p&gt;The data is being stores in a JSON array. The id field is for when creating new jobs it will stay uniqie until hooked up to a database.&lt;/p&gt;

&lt;h2 id=&quot;documentqueryselector-for-fake-jquery&quot;&gt;document.querySelector for fake JQuery&lt;/h2&gt;
&lt;p&gt;I am using this to select elements to cut out the need for JQuery&lt;/p&gt;

&lt;p&gt;//Simple Fake JQuery
   var $ = function(str){
      var ele = document.querySelectorAll(str);
      if(ele.length == 1) ele = ele[0];
      ele.on = function(event, func){ this.addEventListener(event, func); }
      return ele;
   };&lt;/p&gt;

&lt;h2 id=&quot;the-app-functions&quot;&gt;The app functions&lt;/h2&gt;
&lt;p&gt;I broke the app into a bunch of small functions for that we could manipulate the data and template with using simplier commands like openModify and close Modify&lt;/p&gt;

&lt;h2 id=&quot;appending-an-element-with-vanilla-javascript&quot;&gt;Appending an element with vanilla javascript&lt;/h2&gt;
&lt;p&gt;To append an element using vanilla javascript I kept it simple and created a string of the element and then added it to the innerHTML. This works well!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var template = `
   &amp;lt;tr class='jobrow' id='${jobID}'&amp;gt;
      &amp;lt;td&amp;gt;${job.name}&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;${job.path}&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;${job.startDate} ${job.startTime}&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;${job.interval}&amp;lt;/td&amp;gt;
   &amp;lt;/tr&amp;gt;`;
 app.jobs.innerHTML += template;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;getting-a-job-index&quot;&gt;Getting a job index&lt;/h2&gt;
&lt;p&gt;Because when hooked into a database and if you deelte a job in the middle of the array the job keys are not going to always match up. To keep a unique key associated with a job I created a simple function to keturn the job key.&lt;/p&gt;

&lt;p&gt;getJobIndex: function(key){
         var index = 0;
         app.data.rows.forEach(function(job, index){
            if(job.key == Number(key))
               return;
         })
         return index
      }&lt;/p&gt;

&lt;p&gt;#Saving and Adding new jobs
When saving or adding a new job when you hit the save button the data is updated and then the entire table that is displayed is refreshed to display the freshly updated data&lt;/p&gt;

&lt;p data-height=&quot;600&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;XpGvNg&quot; data-default-tab=&quot;js,result&quot; data-user=&quot;sean_codes&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Front End - Cron Job Manager&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/sean_codes/pen/XpGvNg/&quot;&gt;Front End - Cron Job Manager&lt;/a&gt; by Sean Codes (&lt;a href=&quot;http://codepen.io/sean_codes&quot;&gt;@sean_codes&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;I hope this helps you please let me know if you have any questions!&lt;/p&gt;</content><category term="codepen" /><category term="material" /><category term="flexbox" /><category term="jquery" /><category term="frontend" /><category term="animation" /><category term="data" /><summary type="html">This is a javascript heavy front end template I created for creating, deleting, and updating backend cron jobs. This uses no frameworks or plugins. Here are some notes:</summary></entry><entry><title type="html">A Messenger template with flexbox</title><link href="http://localhost:4000/2017/02/15/codepen-messenger-flexbox" rel="alternate" type="text/html" title="A Messenger template with flexbox" /><published>2017-02-15T00:00:00-06:00</published><updated>2017-02-15T00:00:00-06:00</updated><id>http://localhost:4000/2017/02/15/codepen-messenger-flexbox</id><content type="html" xml:base="http://localhost:4000/2017/02/15/codepen-messenger-flexbox">&lt;p&gt;This is a simple messenger template that uses vertical and horizontal flexbox! These are some notes I took from the project.&lt;/p&gt;

&lt;h2 id=&quot;make-an-element-centered&quot;&gt;Make an element centered&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/* the .parent can be body! Just make sure body and html are height:100% */
.parent{ display: flex; }
.child {flex: 1; margin: auto; }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;vertical-flexbox&quot;&gt;Vertical flexbox&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.parent{ display: flex; flex-direction: column; }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;fluid-design-element-with-fixed-width-of-100px&quot;&gt;Fluid design element with fixed width of 100px&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.parent{ display: flex; }
.elementFixedWidth { width: 100px; }
.elementFluid{ flex: 1; }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p data-height=&quot;550&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;xgMNxe&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;sean_codes&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Front End Day 26 - A Chat Template&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/sean_codes/pen/xgMNxe/&quot;&gt;Front End Day 26 - A Chat Template&lt;/a&gt; by Sean Codes (&lt;a href=&quot;http://codepen.io/sean_codes&quot;&gt;@sean_codes&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;I hope this helps you please let me know if you have any questions!&lt;/p&gt;</content><category term="codepen" /><category term="material" /><category term="flexbox" /><category term="jquery" /><category term="frontend" /><category term="animation" /><summary type="html">This is a simple messenger template that uses vertical and horizontal flexbox! These are some notes I took from the project.</summary></entry><entry><title type="html">Codepen Floating Action Button</title><link href="http://localhost:4000/2017/02/14/2017-codepen-material-fab-floating-action-button" rel="alternate" type="text/html" title="Codepen Floating Action Button" /><published>2017-02-14T00:00:00-06:00</published><updated>2017-02-14T00:00:00-06:00</updated><id>http://localhost:4000/2017/02/14/2017-codepen-material-fab-floating-action-button</id><content type="html" xml:base="http://localhost:4000/2017/02/14/2017-codepen-material-fab-floating-action-button">&lt;p&gt;This is a pen for a floating action button using CSS. This could be done using the checkbox trick but I felt using JavaScript will make it flow better because the action button already required a bunch of CSS.&lt;/p&gt;

&lt;p data-height=&quot;540&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;qRgEOJ&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;sean_codes&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Front End 25 - Material Design Floating Action Button&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/sean_codes/pen/qRgEOJ/&quot;&gt;Front End 25 - Material Design Floating Action Button&lt;/a&gt; by Sean Codes (&lt;a href=&quot;http://codepen.io/sean_codes&quot;&gt;@sean_codes&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;I hope this helps you please let me know if you have any questions!&lt;/p&gt;</content><category term="codepen" /><category term="material" /><category term="frontend" /><category term="animation" /><summary type="html">This is a pen for a floating action button using CSS. This could be done using the checkbox trick but I felt using JavaScript will make it flow better because the action button already required a bunch of CSS.</summary></entry><entry><title type="html">Are you a programmer? How old are you?</title><link href="http://localhost:4000/2017/02/13/are-you-a-programmer-how-old" rel="alternate" type="text/html" title="Are you a programmer? How old are you?" /><published>2017-02-13T00:00:00-06:00</published><updated>2017-02-13T00:00:00-06:00</updated><id>http://localhost:4000/2017/02/13/are-you-a-programmer-how-old</id><content type="html" xml:base="http://localhost:4000/2017/02/13/are-you-a-programmer-how-old">&lt;p&gt;Hi! Yes and Iâ€™m 23 :]&lt;/p&gt;</content><category term="life" /><category term="about" /><category term="age" /><summary type="html">Hi! Yes and Iâ€™m 23 :]</summary></entry><entry><title type="html">I want to use Xamarin for cross platform development. Isnâ€™t wrapping web apps a little bit slow and doesnâ€™t feel like a native app?</title><link href="http://localhost:4000/2017/02/12/xamarin-for-cross-platform-app-development" rel="alternate" type="text/html" title="I want to use Xamarin for cross platform development. Isn't wrapping web apps a little bit slow and doesn't feel like a native app?" /><published>2017-02-12T00:00:00-06:00</published><updated>2017-02-12T00:00:00-06:00</updated><id>http://localhost:4000/2017/02/12/xamarin-for-cross-platform-app-development</id><content type="html" xml:base="http://localhost:4000/2017/02/12/xamarin-for-cross-platform-app-development">&lt;p&gt;JavaScript is pretty fast already and CSS can access the GPU. If you use the right tools and techniques you should not be able to tell the difference in a Web App and native.&lt;/p&gt;</content><category term="app" /><category term="webapp" /><category term="gamedev" /><category term="tools" /><category term="cordova" /><summary type="html">JavaScript is pretty fast already and CSS can access the GPU. If you use the right tools and techniques you should not be able to tell the difference in a Web App and native.</summary></entry></feed>
